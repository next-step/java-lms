create table course (
    id bigint generated by default as identity,
    title varchar(255) not null,
    creator_id bigint not null,
    created_at timestamp not null,
    updated_at timestamp,
    primary key (id)
);

create table ns_user (
    id bigint generated by default as identity,
    user_id varchar(20) not null,
    password varchar(20) not null,
    name varchar(20) not null,
    email varchar(50),
    created_at timestamp not null,
    updated_at timestamp,
    primary key (id)
);

create table question (
    id bigint generated by default as identity,
    created_at timestamp not null,
    updated_at timestamp,
    contents clob,
    deleted boolean not null,
    title varchar(100) not null,
    writer_id bigint,
    primary key (id)
);

create table answer (
    id bigint generated by default as identity,
    created_at timestamp not null,
    updated_at timestamp,
    contents clob,
    deleted boolean not null,
    question_id bigint,
    writer_id bigint,
    primary key (id)
);

create table delete_history (
    id bigint not null,
    content_id bigint,
    content_type varchar(255),
    created_date timestamp,
    deleted_by_id bigint,
    primary key (id)
);

create table session (
    id bigint generated by default as identity,
    course_id bigint,
    start_date timestamp,
    end_date timestamp,
    status varchar(255),
    is_recruiting boolean not null,
    number_of_students int,
    max_number_of_students int,
    price bigint,
    type varchar(1),
    primary key (id)
);

create table cover_image_info (
     id bigint generated by default as identity,
     size bigint,
     width bigint,
     height bigint,
     type varchar(255),
     primary key (id)
);

create table session_cover_image_info (
      id bigint generated by default as identity,
      session_id bigint not null,
      cover_image_info_id bigint not null,
      primary key (id)
);

create table selection (
      id bigint generated by default as identity,
      user_id bigint not null,
      session_id bigint not null,
      has_paid boolean not null,
      primary key (id)
);
