package nextstep.courses.infrastructure.persistence.entity;

import java.time.LocalDateTime;
import java.util.List;
import nextstep.courses.domain.BaseTimeEntity;
import nextstep.courses.domain.Image;
import nextstep.courses.domain.MaxEnrollment;
import nextstep.courses.domain.Session;
import nextstep.courses.domain.SessionInfo;
import nextstep.courses.domain.SessionPeriod;
import nextstep.courses.domain.SessionStatus;
import nextstep.courses.domain.SessionType;
import nextstep.courses.domain.Students;
import nextstep.users.domain.NsUser;

/**
 * JPA Entity 처럼 구성한다.
 * <p>
 * create table session ( id bigint generated by default as identity, title varchar(255) not null,
 * description text, cover_image_id bigint, session_type varchar(20) not null, session_status
 * varchar(20) not null, max_enrollment_size int, start_date_time timestamp, course_id bigint not
 * null, end_date_time timestamp, created_at timestamp not null, updated_at timestamp, primary key
 * (id), foreign key (cover_image_id) references image(id), foreign key (course_id) references
 * course(id) );
 *
 * @Embedable을 활용하는 느낌처럼 관련 객체를 묶고자 한다.
 * @Embedable로써 감찬 객체랑 Domain에서 사용하는 묶음?? 객체와 성격이 다르지만 현재는 편의를 위해 동일한 객체로 사용하고자 한다.
 */
public class SessionEntity extends BaseTimeEntity {

  private Long id;

  private Long courseId;

  private SessionInfo sessionInfo;

  private Long coverImageId;

  private SessionType sessionType;

  private SessionStatus sessionStatus;

  private int maxEnrollmentSize;
  private List<Long> students;

  private SessionPeriod sessionPeriod;

  public SessionEntity() {
  }

  /**
   * 주 생성자
   */
  public SessionEntity(Long id, Long courseId, SessionInfo sessionInfo, Long coverImageId,
      SessionType sessionType, SessionStatus sessionStatus, int maxEnrollmentSize,
      SessionPeriod sessionPeriod) {
    this.id = id;
    this.courseId = courseId;
    this.sessionInfo = sessionInfo;
    this.coverImageId = coverImageId;
    this.sessionType = sessionType;
    this.sessionStatus = sessionStatus;
    this.maxEnrollmentSize = maxEnrollmentSize;
    this.sessionPeriod = sessionPeriod;
  }

  public SessionEntity(Long id, Long courseId, String title, String description, Long coverImageId,
      String sessionType, String sessionStatus, int maxEnrollmentSize, LocalDateTime startDateTime,
      LocalDateTime endDateTime) {
    this.id = id;
    this.courseId = courseId;
    this.sessionInfo = new SessionInfo(title, description);
    this.coverImageId = coverImageId;
    this.sessionType = SessionType.valueOf(sessionType);
    this.sessionStatus = SessionStatus.valueOf(sessionStatus);
    this.maxEnrollmentSize = maxEnrollmentSize;
    this.sessionPeriod = new SessionPeriod(startDateTime, endDateTime);
  }

  public Long getCoverImageId() {
    return coverImageId;
  }

  public Session toDomain(List<NsUser> students, Image image) {
    return new Session(id, sessionInfo, image, sessionType, sessionStatus,
        new Students(students, new MaxEnrollment(maxEnrollmentSize)), sessionPeriod, createdAt,
        updatedAt);
  }

  public Long getId() {
    return id;
  }

  public Long getCourseId() {
    return courseId;
  }

  public SessionInfo getSessionInfo() {
    return sessionInfo;
  }

  public SessionType getSessionType() {
    return sessionType;
  }

  public SessionStatus getSessionStatus() {
    return sessionStatus;
  }

  public int getMaxEnrollmentSize() {
    return maxEnrollmentSize;
  }

  public List<Long> getStudents() {
    return students;
  }

  public SessionPeriod getSessionPeriod() {
    return sessionPeriod;
  }

  @Override
  public String toString() {
    return "SessionEntity{" +
        "id=" + id +
        ", courseId=" + courseId +
        ", sessionInfo=" + sessionInfo +
        ", coverImageId=" + coverImageId +
        ", sessionType=" + sessionType +
        ", sessionStatus=" + sessionStatus +
        ", maxEnrollmentSize=" + maxEnrollmentSize +
        ", students=" + students +
        ", sessionPeriod=" + sessionPeriod +
        '}';
  }
}
