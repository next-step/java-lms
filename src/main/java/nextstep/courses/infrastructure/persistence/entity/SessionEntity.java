package nextstep.courses.infrastructure.persistence.entity;

import java.time.LocalDateTime;
import nextstep.courses.domain.BaseTimeEntity;
import nextstep.courses.domain.SessionInfo;
import nextstep.courses.domain.SessionPeriod;
import nextstep.courses.domain.SessionStatus;
import nextstep.courses.domain.SessionType;
import nextstep.courses.domain.Students;

/**
 * JPA Entity 처럼 구성한다.
 *
 * create table session (
 *     id bigint generated by default as identity,
 *     title varchar(255) not null,
 *     description text,
 *     cover_image_id bigint,
 *     session_type varchar(20) not null,
 *     session_status varchar(20) not null,
 *     max_enrollment_size int,
 *     start_date_time timestamp,
 *     course_id bigint not null,
 *     end_date_time timestamp,
 *     created_at timestamp not null,
 *     updated_at timestamp,
 *     primary key (id),
 *     foreign key (cover_image_id) references image(id),
 *     foreign key (course_id) references course(id)
 * );
 *
 * @Embedable을 활용하는 느낌처럼 관련 객체를 묶고자 한다.
 * @Embedable로써 감찬 객체랑 Domain에서 사용하는 묶음?? 객체와 성격이 다르지만
 * 현재는 편의를 위해 동일한 객체로 사용하고자 한다.
 */
public class SessionEntity extends BaseTimeEntity {

  private Long id;

  private CourseEntity course;

  private SessionInfo sessionInfo;

  private ImageEntity coverImage;

  private SessionType sessionType;

  private SessionStatus sessionStatus;

  private Students students;

  private SessionPeriod sessionPeriod;

  public SessionEntity() {
  }

  /**
   * 주 생성자
   */
  public SessionEntity(CourseEntity course, SessionInfo sessionInfo, ImageEntity coverImage,
      SessionType sessionType, SessionStatus sessionStatus, Students students,
      SessionPeriod sessionPeriod, LocalDateTime createdAt, LocalDateTime updatedAt) {
    super(createdAt, updatedAt);
    this.course = course;
    this.sessionInfo = sessionInfo;
    this.coverImage = coverImage;
    this.sessionType = sessionType;
    this.sessionStatus = sessionStatus;
    this.students = students;
    this.sessionPeriod = sessionPeriod;
  }

  }
